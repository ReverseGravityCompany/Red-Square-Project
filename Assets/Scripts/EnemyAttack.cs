using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class EnemyAttack : MonoBehaviour
{
    [Range(0.1f, 100f)] public float TimeToDecision;
    [Range(-100f, 100f)] public float FirstTimeToDecision;
    //AllMortal allMortal;
    //private int CountEnemyLeft;
    //private Player thePlayer;
    //public bool CanIAttackRedMortal;
    //public bool Yellow;
    //public bool Pink;s
    //public bool Green;
    //public bool Orange;

  //  private void Start()
  //  {
  //      CanIAttackRedMortal = false;
  //      allMortal = GetComponent<AllMortal>();
  //      thePlayer = GetComponent<Player>();
  //      #region [2,2]
  //      if (allMortal.TwoAndTwo)
  //      {
  //          StartCoroutine("StartAttack");
  //      }
  //      #endregion
  //      #region [3,2]
  //      if (allMortal.ThreeAndTwo)
  //      {
  //          StartCoroutine("StartAttackThreeAndTwo");
  //      }
  //      #endregion
  //      #region [3,3]
  //      if (allMortal.ThreeAndThree)
  //      {
  //          StartCoroutine("StartAttackThreeAndThree");
  //          if (Yellow)
  //          {
  //              StartCoroutine("StartAttackThreeAndThreeYellow");
  //          }
  //      }
  //      #endregion
  //      #region [4,3]
  //      if (allMortal.FourAndThree)
  //      {
  //          StartCoroutine("StartAttackFourAndThree");
  //          if (Yellow)
  //          {
  //              StartCoroutine("StartAttackFourAndThreeYellow");
  //          }
  //      }
  //      #endregion
  //      #region [5,3]
  //      if (allMortal.FiveAndThree)
  //      {
  //          StartCoroutine("StartAttackFiveAndThree");
  //          if (Yellow)
  //          {
  //              StartCoroutine("StartAttackFiveAndThreeYellow");
  //          }
  //          if (Pink)
  //          {
  //              StartCoroutine("StartAttackFiveAndThreePink");
  //          }
  //      }
  //      #endregion
  //      #region [6,6]
  //      if (allMortal.SixAndSix)
  //      {
  //          StartCoroutine("StartAttackSixAndSix");
  //          if (Yellow)
  //          {
  //              StartCoroutine("StartAttackSixAndSixYellow");
  //          }
  //          if (Pink)
  //          {
  //              StartCoroutine("StartAttackSixAndSixPink");
  //          }
  //      }
  //      #endregion
  //      #region [7,7]
  //      if (allMortal.SevenAndSeven)
  //      {
  //          StartCoroutine("StartAttackSevenAndSeven");
  //          if (Yellow)
  //          {
  //              StartCoroutine("StartAttackSevenAndSevenYellow");
  //          }
  //          if (Pink)
  //          {
  //              StartCoroutine("StartAttackSevenAndSevenPink");
  //          }
  //          if (Green)
  //          {
  //              StartCoroutine("StartAttackSevenAndSevenGreen");

  //          }
  //          if (Orange)
  //          {
  //              StartCoroutine("StartAttackSevenAndSevenOrange");

  //          }
  //      }
  //      #endregion
  //      #region [Last]
  //      if (allMortal.Last)
  //      {
  //          StartCoroutine("StartAttackLast");
  //      }
  //      #endregion
  //  }

  //  #region [2,2]
  //  private IEnumerator StartAttack()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          CountEnemyLeft++;
  //          float StupidMove = Random.Range(0, 100f);
  //          if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Be.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Ge.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 40)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.De.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.De.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          CountEnemyLeft++;
  //          float StupidMove = Random.Range(0f, 100f);
  //          if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Re.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Ge.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.De.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.De.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          CountEnemyLeft++;
  //          float StupidMove = Random.Range(0, 100f);
  //          if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 40)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Be.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Ge.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Ge.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 5)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Re.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          CountEnemyLeft++;
  //          float StupidMove = Random.Range(0f, 100f);
  //          if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //              {
  //                  if (Random.Range(0, 100f) < 60)
  //                  {
  //                      int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Be.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Be.GetComponent<Mortal>().CheckAllSkills();
  //                          CanIAttackRedMortal = true;
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          {
  //              if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.Re.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.Re.GetComponent<Mortal>().CheckAllSkills();

  //                          CanIAttackRedMortal = true;
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //          if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue && CanIAttackRedMortal)
  //          {
  //              if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //              {
  //                  if (Random.Range(0, 100f) < 70f)
  //                  {
  //                      int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                      allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                      allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                      if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                      {
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //                     Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //                          allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                          allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //                          allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                          allMortal.De.GetComponent<Mortal>().TurboMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CopacityMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().RandomChangeMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().AllAttackMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().X2Mortal = false;
  //                          allMortal.De.GetComponent<Mortal>().MaxSpaceMortal = false;
  //                          allMortal.De.GetComponent<Mortal>().CheckAllSkills();
  //                          yield return StartCoroutine("StartAttack");
  //                      }

  //                  }
  //              }
  //          }
  //      }
  //      #endregion

  //      yield return StartCoroutine("StartAttack");

  //  }
  //  #endregion
  //  #region [3,2]
  //  private IEnumerator StartAttackThreeAndTwo()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }


  //          //CountEnemyLeft++;
  //          //float StupidMove = Random.Range(0, 100f);
  //          //if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 40)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Te.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Te.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Te.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Se.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Se.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Se.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //          //    CountEnemyLeft++;
  //          //    float StupidMove = Random.Range(0f, 100f);
  //          //    if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //    {
  //          //        if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //          //        {
  //          //            if (Random.Range(0, 100f) < 70f)
  //          //            {
  //          //                int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //                allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //                if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //                {
  //          //                    allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //          //               Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                    allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                    allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                    allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                    yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //                }

  //          //            }
  //          //        }
  //          //    }
  //          //    if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //    {
  //          //        if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //        {
  //          //            if (Random.Range(0, 100f) < 70f)
  //          //            {
  //          //                int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //                allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //                if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //                {
  //          //                    allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //          //               Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                    allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                    allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                    allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                    yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //                }

  //          //            }
  //          //        }
  //          //    }
  //          //    if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //    {
  //          //        if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //        {
  //          //            if (Random.Range(0, 100f) < 70f)
  //          //            {
  //          //                int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //                allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //                if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //                {
  //          //                    allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //          //               Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                    allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                    allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                    allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                    yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //                }

  //          //            }
  //          //        }
  //          //    }
  //          //    if (allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //    {
  //          //        if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //        {
  //          //            if (Random.Range(0, 100f) < 50f)
  //          //            {
  //          //                int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //                allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //                if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //                {
  //          //                    allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount =
  //          //               Mathf.Abs(allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                    allMortal.Te.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                    allMortal.Te.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                    allMortal.Te.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                    yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //                }

  //          //            }
  //          //        }
  //          //    }
  //          //    if (allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //    {
  //          //        if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //        {
  //          //            if (Random.Range(0, 100f) < 50f)
  //          //            {
  //          //                int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //                allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //                if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //                {
  //          //                    allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount =
  //          //               Mathf.Abs(allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                    allMortal.Se.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                    allMortal.Se.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                    allMortal.Se.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                    yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //                }

  //          //            }
  //          //        }
  //          //    }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //          //CountEnemyLeft++;
  //          //float StupidMove = Random.Range(0, 100f);
  //          //if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 40)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 5)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Te.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Te.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Te.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Se.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Se.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Se.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //          //CountEnemyLeft++;
  //          //float StupidMove = Random.Range(0f, 100f);
  //          //if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 60)
  //          //        {
  //          //            int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue && CanIAttackRedMortal)
  //          //{
  //          //    if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Te.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Te.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Te.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Se.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Se.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Se.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //          //CountEnemyLeft++;
  //          //float StupidMove = Random.Range(0f, 100f);
  //          //if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 60)
  //          //        {
  //          //            int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue && CanIAttackRedMortal)
  //          //{
  //          //    if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Se.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Se.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Se.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndTwo");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //          //CountEnemyLeft++;
  //          //float StupidMove = Random.Range(0f, 100f);
  //          //if (allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 60)
  //          //        {
  //          //            int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Be.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Be.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Be.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 30)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Re.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Re.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Re.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                CanIAttackRedMortal = true;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue && CanIAttackRedMortal)
  //          //{
  //          //    if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 20)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 70f)
  //          //        {
  //          //            int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.De.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.De.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.De.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.De.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.De.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.De.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.De.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Ge.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Ge.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Ge.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //          //if (allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //          //{
  //          //    if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < 10)
  //          //    {
  //          //        if (Random.Range(0, 100f) < 50f)
  //          //        {
  //          //            int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //          //            allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //          //            allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //          //            if (allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //          //            {
  //          //                allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount =
  //          //           Mathf.Abs(allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount);
  //          //                allMortal.Te.GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //          //                allMortal.Te.GetComponent<Image>().color = thePlayer.BlueColor;
  //          //                allMortal.Te.transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //          //                yield return StartCoroutine("StartAttackThreeAndTwo");
  //          //            }

  //          //        }
  //          //    }
  //          //}
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackThreeAndTwo");

  //  }
  //  #endregion
  //  #region [3,3]
  //  private IEnumerator StartAttackThreeAndThree()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");

  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackThreeAndThree");

  //  }
  //  private IEnumerator StartAttackThreeAndThreeYellow()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Yellow && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //      && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //      && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //      && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //      && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //      && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackThreeAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackThreeAndThreeYellow");

  //  }
  //  #endregion
  //  #region [4,3]
  //  private IEnumerator StartAttackFourAndThree()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Pe.GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackFourAndThree");

  //  }
  //  private IEnumerator StartAttackFourAndThreeYellow()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Yellow && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Pe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFourAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackFourAndThreeYellow");

  //  }
  //  #endregion
  //  #region [5,3]
  //  private IEnumerator StartAttackFiveAndThree()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] OeTypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < OeTypeOfAttack.Length; i++)
  //          {
  //              if (OeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              OeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              OeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              OeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] LeTypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < LeTypeOfAttack.Length; i++)
  //          {
  //              if (LeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              LeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              LeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              LeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] WeTypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < WeTypeOfAttack.Length; i++)
  //          {
  //              if (WeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              WeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              WeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              WeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] HeTypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < HeTypeOfAttack.Length; i++)
  //          {
  //              if (HeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              HeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              HeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              HeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThree");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackFiveAndThree");

  //  }
  //  private IEnumerator StartAttackFiveAndThreeYellow()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Yellow && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreeYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackFiveAndThreeYellow");

  //  }
  //  private IEnumerator StartAttackFiveAndThreePink()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Pink && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 60f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 70f)
  //                                  yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              yield return StartCoroutine("StartAttackFiveAndThreePink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackFiveAndThreePink");

  //  }
  //  #endregion
  //  #region [6,6]
  //  private IEnumerator StartAttackSixAndSix()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] OeTypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < OeTypeOfAttack.Length; i++)
  //          {
  //              if (OeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              OeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              OeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              OeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] LeTypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < LeTypeOfAttack.Length; i++)
  //          {
  //              if (LeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              LeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              LeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              LeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] WeTypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < WeTypeOfAttack.Length; i++)
  //          {
  //              if (WeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              WeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              WeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              WeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] HeTypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < HeTypeOfAttack.Length; i++)
  //          {
  //              if (HeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              HeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              HeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              HeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSix");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackSixAndSix");

  //  }
  //  private IEnumerator StartAttackSixAndSixYellow()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Yellow && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackSixAndSixYellow");

  //  }
  //  private IEnumerator StartAttackSixAndSixPink()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Pink && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }

  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 60f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20f)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 20)
  //                                  yield return StartCoroutine("StartAttackSixAndSixPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackSixAndSixPink");

  //  }
  //  #endregion
  //  #region [7,7]
  //  private IEnumerator StartAttackSevenAndSeven()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Blue && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.Blue
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] OeTypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < OeTypeOfAttack.Length; i++)
  //          {
  //              if (OeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              OeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              OeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              OeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] LeTypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < LeTypeOfAttack.Length; i++)
  //          {
  //              if (LeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              LeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              LeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              LeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] WeTypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < WeTypeOfAttack.Length; i++)
  //          {
  //              if (WeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              WeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              WeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              WeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] HeTypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < HeTypeOfAttack.Length; i++)
  //          {
  //              if (HeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              HeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              HeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              HeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region KMHE ATTACK
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.Blue)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Blue)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Blue);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.BlueColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.BlueColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSeven");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      yield return StartCoroutine("StartAttackSevenAndSeven");

  //  }
  //  private IEnumerator StartAttackSevenAndSevenYellow()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Yellow && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //           && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.Yellow
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KMHE ATTACK
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.Yellow)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Yellow)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Yellow);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.YellowColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.YellowColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenYellow");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      yield return StartCoroutine("StartAttackSevenAndSevenYellow");

  //  }
  //  private IEnumerator StartAttackSevenAndSevenPink()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Pink && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //           && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.Pink
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }

  //                              if (Random.Range(0, 100) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 60f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PickColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KMHE ATTACK
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.Pink)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Pink)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Pink);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.PinkColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.PinkColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 35f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenPink");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      yield return StartCoroutine("StartAttackSevenAndSevenPink");

  //  }
  //  private IEnumerator StartAttackSevenAndSevenGreen()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Green && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //           && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.Green
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }

  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 60f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 20f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KMHE ATTACK
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.Green)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Green)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Green);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.GreenColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.GreenColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenGreen");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackSevenAndSevenGreen");

  //  }
  //  private IEnumerator StartAttackSevenAndSevenOrange()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.Orange && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //           && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.Orange
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }

  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 60f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100) < 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KMHE ATTACK
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.Orange)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.Orange)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.Orange);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.OrangeColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.OrangeColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 40f)
  //                                  yield return StartCoroutine("StartAttackSevenAndSevenOrange");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      yield return StartCoroutine("StartAttackSevenAndSevenOrange");

  //  }
  //  #endregion

  //  #region [Last]
  //  private IEnumerator StartAttackLast()
  //  {
  //      yield return new WaitForSeconds(TimeToDecision + FirstTimeToDecision);
  //      FirstTimeToDecision = 0;
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() != Identity.iden.LastColor && allMortal.Be.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.De.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Ge.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Te.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Se.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Ue.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Je.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Oe.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Le.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.We.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.He.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.Qe.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.AE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.KE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.ME.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.CE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.NE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.VE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.PPE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.CCE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BBE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.OOE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.UUE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.JJE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.GGE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.RRE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.FFE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.TTE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.AAE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.QQE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.VVE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.WWE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.SSE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.ZZE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.YYE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.DDE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.MME.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.LLE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.IIE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.NNE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.XXE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.KKE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.HHE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.EEE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.WEE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.KYE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.QUE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BNE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.GTE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BRE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.KHE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.QGE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.ZEE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.MKE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BTE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.YYYE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.OKRE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.HGRE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.HBGE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.AZDE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BBBE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.BGRE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.PERE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.FFFE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.DDDE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.KMHE.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End1.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End2.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End3.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End4.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End5.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End6.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End7.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End8.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End9.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End10.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End11.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End12.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End13.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End14.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End15.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End16.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End17.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End18.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End19.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End20.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End21.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End22.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End23.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End24.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End25.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End26.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End27.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End28.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End29.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End30.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End31.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End32.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End33.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End34.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End35.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End36.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End37.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End38.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End39.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End40.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End41.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End42.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End43.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End44.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End45.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End46.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End47.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End48.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End49.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End50.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End51.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End52.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End53.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End54.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End55.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End56.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End57.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End58.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End59.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End60.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End61.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End62.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End63.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End64.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End65.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End66.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End67.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End68.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End69.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End70.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End71.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End72.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End73.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End74.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End75.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End76.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End77.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End78.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End79.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End80.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End81.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End82.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End83.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End84.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End85.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End86.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End87.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End88.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End89.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End90.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End91.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End92.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End93.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End94.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End95.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End96.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End97.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End98.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End99.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          && allMortal.End100.GetComponent<Identity>().GetIden() != Identity.iden.LastColor
  //          )
  //      {
  //          yield return null;
  //      }

  //      #region RE ATTACK
  //      if (allMortal.Re.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] ReTypeOfAttack = allMortal.Re.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < ReTypeOfAttack.Length; i++)
  //          {
  //              if (ReTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Re.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(ReTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              ReTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              ReTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              ReTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              ReTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Be ATTACK
  //      if (allMortal.Be.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] BeTypeOfAttack = allMortal.Be.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < BeTypeOfAttack.Length; i++)
  //          {
  //              if (BeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Be.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(BeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              BeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              BeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              BeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              BeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DE ATTACK
  //      if (allMortal.De.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] DeTypeOfAttack = allMortal.De.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < DeTypeOfAttack.Length; i++)
  //          {
  //              if (DeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.De.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.De.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.De.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(DeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              DeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              DeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              DeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              DeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ge ATTACK
  //      if (allMortal.Ge.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] GeTypeOfAttack = allMortal.Ge.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < GeTypeOfAttack.Length; i++)
  //          {
  //              if (GeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 80f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ge.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                         Mathf.Abs(GeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              GeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              GeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              GeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              GeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Te ATTACK
  //      if (allMortal.Te.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] TeTypeOfAttack = allMortal.Te.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < TeTypeOfAttack.Length; i++)
  //          {
  //              if (TeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 70f)
  //                      {
  //                          int attackDamage = allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Te.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(TeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              TeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              TeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              TeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              TeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Se ATTACK
  //      if (allMortal.Se.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] SeTypeOfAttack = allMortal.Se.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < SeTypeOfAttack.Length; i++)
  //          {
  //              if (SeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 50f)
  //                      {
  //                          int attackDamage = allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Se.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(SeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              SeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              SeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              SeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              SeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Ue ATTACK
  //      if (allMortal.Ue.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] UETypeOfAttack = allMortal.Ue.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < UETypeOfAttack.Length; i++)
  //          {
  //              if (UETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Ue.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(UETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              UETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              UETypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              UETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              UETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Je ATTACK
  //      if (allMortal.Je.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] JeTypeOfAttack = allMortal.Je.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < JeTypeOfAttack.Length; i++)
  //          {
  //              if (JeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Je.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(JeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              JeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              JeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              JeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              JeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Pe ATTACK
  //      if (allMortal.Pe.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] PETypeOfAttack = allMortal.Pe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < PETypeOfAttack.Length; i++)
  //          {
  //              if (PETypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Pe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(PETypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              PETypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              PETypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              PETypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              PETypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Oe ATTACK
  //      if (allMortal.Oe.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] OeTypeOfAttack = allMortal.Oe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < OeTypeOfAttack.Length; i++)
  //          {
  //              if (OeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Oe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(OeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              OeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              OeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              OeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              OeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Le ATTACK
  //      if (allMortal.Le.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] LeTypeOfAttack = allMortal.Le.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < LeTypeOfAttack.Length; i++)
  //          {
  //              if (LeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Le.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(LeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              LeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              LeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              LeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              LeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region We ATTACK
  //      if (allMortal.We.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] WeTypeOfAttack = allMortal.We.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < WeTypeOfAttack.Length; i++)
  //          {
  //              if (WeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.We.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 40f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.We.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.We.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(WeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              WeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              WeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              WeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              WeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region He ATTACK
  //      if (allMortal.He.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] HeTypeOfAttack = allMortal.He.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < HeTypeOfAttack.Length; i++)
  //          {
  //              if (HeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.He.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 30f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.He.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.He.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(HeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              HeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              HeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              HeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              HeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region Qe ATTACK
  //      if (allMortal.Qe.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.Qe.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.Qe.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AE ATTACK
  //      if (allMortal.AE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ME ATTACK
  //      if (allMortal.ME.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KE ATTACK
  //      if (allMortal.KE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CE ATTACK
  //      if (allMortal.CE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NE ATTACK
  //      if (allMortal.NE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VE ATTACK
  //      if (allMortal.VE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region PEE ATTACK
  //      if (allMortal.PPE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PPE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PPE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region CCE ATTACK
  //      if (allMortal.CCE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.CCE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.CCE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BBE ATTACK
  //      if (allMortal.BBE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region OOE ATTACK
  //      if (allMortal.OOE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OOE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OOE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region UUE ATTACK
  //      if (allMortal.UUE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.UUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.UUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region JJE ATTACK
  //      if (allMortal.JJE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.JJE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.JJE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GGE ATTACK
  //      if (allMortal.GGE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region RRE ATTACK
  //      if (allMortal.RRE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.RRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.RRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region FFE ATTACK
  //      if (allMortal.FFE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region TTE ATTACK
  //      if (allMortal.TTE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.TTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.TTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region AAE ATTACK
  //      if (allMortal.AAE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AAE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AAE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QQE ATTACK
  //      if (allMortal.QQE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QQE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QQE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region VVE ATTACK
  //      if (allMortal.VVE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.VVE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.VVE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WWE ATTACK
  //      if (allMortal.WWE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WWE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WWE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region SSE ATTACK
  //      if (allMortal.SSE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.SSE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.SSE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZZE ATTACK
  //      if (allMortal.ZZE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZZE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZZE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region YYE ATTACK
  //      if (allMortal.YYE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region DDE ATTACK
  //      if (allMortal.DDE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region MME ATTACK
  //      if (allMortal.MME.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MME.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MME.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region LLE ATTACK
  //      if (allMortal.LLE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.LLE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.LLE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region IIE ATTACK
  //      if (allMortal.IIE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.IIE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.IIE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region NNE ATTACK
  //      if (allMortal.NNE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.NNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.NNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region XXE ATTACK
  //      if (allMortal.XXE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.XXE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.XXE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KKE ATTACK
  //      if (allMortal.KKE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region HHE ATTACK
  //      if (allMortal.HHE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region EEE ATTACK
  //      if (allMortal.EEE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.EEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.EEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region WEE ATTACK
  //      if (allMortal.WEE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.WEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.WEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KYE ATTACK
  //      if (allMortal.KYE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QUE ATTACK
  //      if (allMortal.QUE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QUE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QUE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BNE ATTACK
  //      if (allMortal.BNE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BNE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BNE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region GTE ATTACK
  //      if (allMortal.GTE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.GTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.GTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region BRE ATTACK
  //      if (allMortal.BRE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region KHE ATTACK
  //      if (allMortal.KHE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region QGE ATTACK
  //      if (allMortal.QGE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.QGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.QGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region ZEE ATTACK
  //      if (allMortal.ZEE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.ZEE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.ZEE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region MKE ATTACK
  //      if (allMortal.MKE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.MKE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.MKE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BTE ATTACK
  //      if (allMortal.BTE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BTE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BTE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region YYYE ATTACK
  //      if (allMortal.YYYE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.YYYE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.YYYE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region OKRE ATTACK
  //      if (allMortal.OKRE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.OKRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.OKRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HGRE ATTACK
  //      if (allMortal.HGRE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region HBGE ATTACK
  //      if (allMortal.HBGE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.HBGE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.HBGE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region AZDE ATTACK
  //      if (allMortal.AZDE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.AZDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.AZDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BBBE ATTACK
  //      if (allMortal.BBBE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BBBE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BBBE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region BGRE ATTACK
  //      if (allMortal.BGRE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.BGRE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.BGRE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region PERE ATTACK
  //      if (allMortal.PERE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.PERE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.PERE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region FFFE ATTACK
  //      if (allMortal.FFFE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.FFFE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.FFFE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region DDDE ATTACK
  //      if (allMortal.DDDE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.DDDE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.DDDE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
  //      #region KMHE ATTACK  
		
		
  //      if (allMortal.KMHE.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.KMHE.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.KMHE.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion\
		//#region End1 ATTACK  
		
		
  //      if (allMortal.End1.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End1.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End1.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End1.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End1.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End2 ATTACK  
		
		
  //      if (allMortal.End2.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End2.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End2.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End2.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End2.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End3 ATTACK  
		
		
  //      if (allMortal.End3.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End3.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End3.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End3.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End3.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End4 ATTACK  
		
		
  //      if (allMortal.End4.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End4.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End4.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End4.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End4.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End5 ATTACK  
		
		
  //      if (allMortal.End5.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End5.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End5.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End5.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End5.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End6 ATTACK  
		
		
  //      if (allMortal.End6.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End6.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End6.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End6.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End6.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End7 ATTACK  
		
		
  //      if (allMortal.End7.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End7.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End7.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End7.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End7.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End8 ATTACK  
		
		
  //      if (allMortal.End8.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End8.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End8.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End8.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End8.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End9 ATTACK  
		
		
  //      if (allMortal.End9.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End9.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End9.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End9.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End9.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End10 ATTACK  
		
		
  //      if (allMortal.End10.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End10.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End10.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End10.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End10.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End11 ATTACK  
		
		
  //      if (allMortal.End11.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End11.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End11.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End11.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End11.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End12 ATTACK  
		
		
  //      if (allMortal.End12.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End12.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End12.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End12.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End12.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End13 ATTACK  
		
		
  //      if (allMortal.End13.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End13.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End13.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End13.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End13.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End14 ATTACK  
		
		
  //      if (allMortal.End14.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End14.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End14.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End14.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End14.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
  //      #region End15 ATTACK
		
  //      if (allMortal.End15.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End15.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End15.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End15.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End15.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End16 ATTACK
		
  //      if (allMortal.End16.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End16.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End16.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End16.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End16.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End17 ATTACK
		
  //      if (allMortal.End17.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End17.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End17.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End17.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End17.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End18 ATTACK
		
  //      if (allMortal.End18.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End18.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End18.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End18.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End18.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End19 ATTACK
		
  //      if (allMortal.End19.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End19.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End19.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End19.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End19.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End20 ATTACK
		
  //      if (allMortal.End20.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End20.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End20.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End20.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End20.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End21 ATTACK
		
  //      if (allMortal.End21.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End21.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End21.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End21.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End21.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End22 ATTACK
		
  //      if (allMortal.End22.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End22.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End22.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End22.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End22.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End23 ATTACK
		
  //      if (allMortal.End23.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End23.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End23.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End23.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End23.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End24 ATTACK
		
  //      if (allMortal.End24.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End24.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End24.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End24.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End24.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End25 ATTACK
		
  //      if (allMortal.End25.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End25.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End25.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End25.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End25.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End26 ATTACK
		
  //      if (allMortal.End26.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End26.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End26.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End26.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End26.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End27 ATTACK
		
  //      if (allMortal.End27.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End27.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End27.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End27.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End27.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End28 ATTACK
		
  //      if (allMortal.End28.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End28.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End28.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End28.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End28.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End29 ATTACK
		
  //      if (allMortal.End29.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End29.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End29.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End29.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End29.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End30 ATTACK
		
  //      if (allMortal.End30.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End30.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End30.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End30.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End30.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End31 ATTACK
		
  //      if (allMortal.End31.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End31.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End31.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End31.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End31.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End32 ATTACK
		
  //      if (allMortal.End32.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End32.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End32.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End32.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End32.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End33 ATTACK
		
  //      if (allMortal.End33.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End33.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End33.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End33.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End33.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End34 ATTACK
		
  //      if (allMortal.End34.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End34.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End34.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End34.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End34.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End35 ATTACK
		
  //      if (allMortal.End35.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End35.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End35.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End35.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End35.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End36 ATTACK
		
  //      if (allMortal.End36.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End36.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End36.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End36.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End36.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End37 ATTACK
		
  //      if (allMortal.End37.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End37.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End37.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End37.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End37.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End38 ATTACK
		
  //      if (allMortal.End38.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End38.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End38.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End38.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End38.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End39 ATTACK
		
  //      if (allMortal.End39.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End39.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End39.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End39.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End39.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End40 ATTACK
		
  //      if (allMortal.End40.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End40.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End40.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End40.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End40.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End41 ATTACK
		
  //      if (allMortal.End41.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End41.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End41.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End41.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End41.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End42 ATTACK
		
  //      if (allMortal.End42.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End42.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End42.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End42.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End42.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End43 ATTACK
		
  //      if (allMortal.End43.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End43.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End43.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End43.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End43.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End44 ATTACK
		
  //      if (allMortal.End44.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End44.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End44.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End44.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End44.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End45 ATTACK
		
  //      if (allMortal.End45.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End45.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End45.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End45.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End45.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End46 ATTACK
		
  //      if (allMortal.End46.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End46.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End46.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End46.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End46.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End47 ATTACK
		
  //      if (allMortal.End47.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End47.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End47.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End47.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End47.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End48 ATTACK
		
  //      if (allMortal.End48.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End48.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End48.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End48.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End48.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End49 ATTACK
		
  //      if (allMortal.End49.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End49.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End49.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End49.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End49.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End50 ATTACK
		
  //      if (allMortal.End50.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End50.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End50.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End50.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End50.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End51 ATTACK
		
  //      if (allMortal.End51.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End51.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End51.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End51.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End51.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End52 ATTACK
		
  //      if (allMortal.End52.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End52.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End52.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End52.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End52.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End53 ATTACK
		
  //      if (allMortal.End53.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End53.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End53.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End53.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End53.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End54 ATTACK
		
  //      if (allMortal.End54.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End54.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End54.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End54.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End54.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End55 ATTACK
		
  //      if (allMortal.End55.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End55.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End55.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End55.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End55.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End56 ATTACK
		
  //      if (allMortal.End56.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End56.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End56.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End56.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End56.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End57 ATTACK
		
  //      if (allMortal.End57.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End57.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End57.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End57.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End57.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End58 ATTACK
		
  //      if (allMortal.End58.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End58.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End58.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End58.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End58.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End59 ATTACK
		
  //      if (allMortal.End59.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End59.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End59.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End59.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End59.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End60 ATTACK
		
  //      if (allMortal.End60.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End60.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End60.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End60.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End60.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End61 ATTACK
		
  //      if (allMortal.End61.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End61.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End61.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End61.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End61.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End62 ATTACK
		
  //      if (allMortal.End62.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End62.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End62.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End62.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End62.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End63 ATTACK
		
  //      if (allMortal.End63.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End63.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End63.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End63.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End63.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End64 ATTACK
		
  //      if (allMortal.End64.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End64.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End64.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End64.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End64.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End65 ATTACK
		
  //      if (allMortal.End65.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End65.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End65.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End65.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End65.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End66 ATTACK
		
  //      if (allMortal.End66.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End66.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End66.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End66.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End66.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End67 ATTACK
		
  //      if (allMortal.End67.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End67.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End67.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End67.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End67.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End68 ATTACK
		
  //      if (allMortal.End68.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End68.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End68.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End68.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End68.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End69 ATTACK
		
  //      if (allMortal.End69.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End69.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End69.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End69.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End69.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End70 ATTACK
		
  //      if (allMortal.End70.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End70.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End70.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End70.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End70.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End71 ATTACK
		
  //      if (allMortal.End71.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End71.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End71.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End71.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End71.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End72 ATTACK
		
  //      if (allMortal.End72.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End72.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End72.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End72.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End72.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End73 ATTACK
		
  //      if (allMortal.End73.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End73.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End73.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End73.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End73.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End74 ATTACK
		
  //      if (allMortal.End74.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End74.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End74.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End74.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End74.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End75 ATTACK
		
  //      if (allMortal.End75.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End75.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End75.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End75.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End75.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End76 ATTACK
		
  //      if (allMortal.End76.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End76.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End76.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End76.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End76.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End77 ATTACK
		
  //      if (allMortal.End77.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End77.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End77.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End77.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End77.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End78 ATTACK
		
  //      if (allMortal.End78.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End78.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End78.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End78.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End78.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End79 ATTACK
		
  //      if (allMortal.End79.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End79.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End79.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End79.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End79.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End80 ATTACK
		
  //      if (allMortal.End80.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End80.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End80.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End80.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End80.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End81 ATTACK
		
  //      if (allMortal.End81.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End81.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End81.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End81.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End81.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End82 ATTACK
		
  //      if (allMortal.End82.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End82.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End82.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End82.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End82.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End83 ATTACK
		
  //      if (allMortal.End83.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End83.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End83.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End83.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End83.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End84 ATTACK
		
  //      if (allMortal.End84.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End84.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End84.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End84.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End84.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End85 ATTACK
		
  //      if (allMortal.End85.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End85.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End85.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End85.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End85.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End86 ATTACK
		
  //      if (allMortal.End86.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End86.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End86.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End86.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End86.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End87 ATTACK
		
  //      if (allMortal.End87.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End87.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End87.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End87.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End87.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End88 ATTACK
		
  //      if (allMortal.End88.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End88.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End88.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End88.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End88.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End89 ATTACK
		
  //      if (allMortal.End89.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End89.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End89.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End89.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End89.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End90 ATTACK
		
  //      if (allMortal.End90.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End90.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End90.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End90.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End90.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End91 ATTACK
		
  //      if (allMortal.End91.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End91.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End91.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End91.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End91.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End92 ATTACK
		
  //      if (allMortal.End92.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End92.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End92.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End92.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End92.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End93 ATTACK
		
  //      if (allMortal.End93.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End93.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End93.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End93.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End93.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End94 ATTACK
		
  //      if (allMortal.End94.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End94.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End94.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End94.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End94.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End95 ATTACK
		
  //      if (allMortal.End95.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End95.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End95.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End95.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End95.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End96 ATTACK
		
  //      if (allMortal.End96.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End96.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End96.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End96.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End96.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End97 ATTACK
		
  //      if (allMortal.End97.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End97.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End97.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End97.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End97.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End98 ATTACK
		
  //      if (allMortal.End98.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End98.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End98.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End98.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End98.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End99 ATTACK
		
  //      if (allMortal.End99.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End99.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End99.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End99.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End99.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		//#region End100 ATTACK
		
  //      if (allMortal.End100.GetComponent<Identity>().GetIden() == Identity.iden.LastColor)
  //      {
  //          GameObject[] QeTypeOfAttack = allMortal.End100.GetComponent<StateMortal>().MyTypeOfAttack;
  //          float StupidMove = Random.Range(0, 100f);
  //          for (int i = 0; i < QeTypeOfAttack.Length; i++)
  //          {
  //              if (QeTypeOfAttack[i].GetComponent<Identity>().GetIden() != Identity.iden.LastColor)
  //              {
  //                  if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount < allMortal.End100.GetComponent<IncreaseMortal>().CurrentCount || StupidMove < Random.Range(0, 50f))
  //                  {
  //                      if (Random.Range(0, 100f) < 90f)
  //                      {
  //                          int attackDamage = allMortal.End100.GetComponent<IncreaseMortal>().CurrentCount;
  //                          allMortal.End100.GetComponent<IncreaseMortal>().CurrentCount = 0;
  //                          QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount -= attackDamage;
  //                          if (QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount <= 0)
  //                          {
  //                              QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount =
  //                             Mathf.Abs(QeTypeOfAttack[i].GetComponent<IncreaseMortal>().CurrentCount);
  //                              QeTypeOfAttack[i].GetComponent<Identity>().SetIden(Identity.iden.LastColor);
  //                              QeTypeOfAttack[i].GetComponent<Image>().color = thePlayer.LastColor;
  //                              QeTypeOfAttack[i].transform.Find("CountMortal").GetComponent<Text>().color = thePlayer.LastColorText;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().TurboMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CopacityMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().RandomChangeMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().AllAttackMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().X2Mortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().MaxSpaceMortal = false;
  //                              QeTypeOfAttack[i].GetComponent<Mortal>().CheckAllSkills();
  //                              if (thePlayer.MyRed != null)
  //                              {
  //                                  thePlayer.MyRed.GetComponent<Mortal>().CheckCanWhoAttack();
  //                              }
  //                              if (Random.Range(0, 100f) > 30f)
  //                                  yield return StartCoroutine("StartAttackLast");
  //                          }
  //                      }
  //                  }
  //              }
  //          }
  //      }
  //      #endregion
		
		
		//yield return StartCoroutine("StartAttackLast");

  //  }
  //  #endregion
}
